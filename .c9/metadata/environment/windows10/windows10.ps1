{"changed":true,"filter":false,"title":"windows10.ps1","tooltip":"/windows10/windows10.ps1","value":"<# Prerequisites (Run each in Terminal)\nInstall-Module -Name AuditPolicyDsc\nInstall-Module -Name SecurityPolicyDsc\nInstall-Module -Name NetworkingDsc\nInstall-Module -Name PSDesiredStateConfiguration\n#>\n\n<# Run stuff below to allow permissions\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nSet-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted\nSet-ExecutionPolicy -Scope LocalMachine -ExecutionPolicy Unrestricted\n#>\n\n<# Execute file (Run in PowerShell with admin)\n./windows10.ps1\nStart-DscConfiguration -Path .\\Windows10Hardening  -Force -Verbose -Wait\n#>\n\n# Starting configuration\n# [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nWrite-Host = 'Starting Configuration'\nConfiguration Windows10Hardening {\n  param (\n    [string[]]$ComputerName = 'localhost'\n  )\n  Import-DscResource -ModuleName 'PSDesiredStateConfiguration'\n  Import-DscResource -ModuleName 'AuditPolicyDsc'\n  Import-DscResource -ModuleName 'SecurityPolicyDsc'\n  Import-DscResource -ModuleName 'NetworkingDsc'\n  \n  Node $ComputerName {\n    # Win+R >> secpol.msc >> Account Policy \n    AccountPolicy AccountPolicies {\n      Name = 'PasswordPolicies'\n\n      Enforce_password_history = '24'\n\n      Minimum_Password_Age = '2'\n\n      Maximum_Password_Age = '50'\n\n      Minimum_Password_Length = '14'\n\n      Password_must_meet_complexity_requirements = 'Enabled'\n\n      Store_passwords_using_reversible_encryption = 'Disabled'\n      \n      Account_lockout_threshold = '5'\n      \n      Account_lockout_duration = '15'\n      \n      Reset_account_lockout_counter_after = '15'\n    }\n    \n    # Win+R >> secpol.msc >> Local Policies >> Audit Policies\n    $Folder = 'C:\\temp'\n    if (-Not(Test-Path -Path $Folder)) {\n        New-Item -Path 'c:\\temp' -ItemType Directory\n    }\n    secedit /export /cfg c:\\temp\\secpol.cfg\n    $secpol = (Get-Content C:\\temp\\secpol.cfg)\n    \n    $Value = $secpol | where{ $_ -like \"AuditSystemEvents*\" }\n    $Index = [array]::IndexOf($secpol,$Value)\n    \n    if($Value -ne \"AuditSystemEvents = 3\") {\n        $secpol.item($Index) = \"AuditSystemEvents = 3\"\n    }\n    \n    $Value = $secpol | where{ $_ -like \"AuditLogonEvents*\" }\n    $Index = [array]::IndexOf($secpol,$Value)\n    \n    if($Value -ne \"AuditLogonEvents = 3\") {\n        $secpol.item($Index) = \"AuditLogonEvents = 3\"\n    }\n    \n    $Value = $secpol | where{ $_ -like \"AuditObjectAccess*\" }\n    $Index = [array]::IndexOf($secpol,$Value)\n    \n    if($Value -ne \"AuditObjectAccess = 3\") {\n        $secpol.item($Index) = \"AuditObjectAccess = 3\"\n    }\n    \n    $Value = $secpol | where{ $_ -like \"AuditPrivilegeUse*\" }\n    $Index = [array]::IndexOf($secpol,$Value)\n    \n    if($Value -ne \"AuditPrivilegeUse = 3\") {\n        $secpol.item($Index) = \"AuditPrivilegeUse = 3\"\n    }\n    \n    $Value = $secpol | where{ $_ -like \"AuditPolicyChange*\" }\n    $Index = [array]::IndexOf($secpol,$Value)\n    \n    if($Value -ne \"AuditPolicyChange = 3\") {\n        $secpol.item($Index) = \"AuditPolicyChange = 3\"\n    }\n    \n    $Value = $secpol | where{ $_ -like \"AuditAccountManage*\" }\n    $Index = [array]::IndexOf($secpol,$Value)\n    \n    if($Value -ne \"AuditAccountManage = 3\") {\n        $secpol.item($Index) = \"AuditAccountManage = 3\"\n    }\n    \n    $Value = $secpol | where{ $_ -like \"AuditProcessTracking*\" }\n    $Index = [array]::IndexOf($secpol,$Value)\n    \n    if($Value -ne \"AuditProcessTracking = 3\") {\n        $secpol.item($Index) = \"AuditProcessTracking = 3\"\n    }\n    \n    $Value = $secpol | where{ $_ -like \"AuditDSAccess*\" }\n    $Index = [array]::IndexOf($secpol,$Value)\n    \n    if($Value -ne \"AuditDSAccess = 3\") {\n        $secpol.item($Index) = \"AuditDSAccess = 3\"\n    }\n    \n    $Value = $secpol | where{ $_ -like \"AuditAccountLogon*\" }\n    $Index = [array]::IndexOf($secpol,$Value)\n    \n    if($Value -ne \"AuditAccountLogon = 3\") {\n        $secpol.item($Index) = \"AuditAccountLogon = 3\"\n    }\n    \n    $secpol | out-file c:\\temp\\secpol.cfg -Force\n    \n    \n    secedit /configure /db c:\\windows\\security\\local.sdb /cfg c:\\temp\\secpol.cfg /areas SECURITYPOLICY\n    \n    Remove-Item -Path 'c:\\temp' -Recurse\n    \n    # Win+R >> secpol.msc >> Local Policies >> User Rights Assignment\n    UserRightsAssignment Accesscredentialmanagerasatrustedcaller {\n      Policy = 'Access_credential_manager_as_a_trusted_caller'\n      Identity = 'No One'\n    }\n    \n    UserRightsAssignment Accessthiscomputerfromthenetwork {\n      Policy = 'Access_this_computer_from_the_network'\n      Identity = 'Administrators, Remote Desktop Users'\n    }\n     \n    UserRightsAssignment Actaspartoftheoperatingsystem {\n      Policy = 'Act_as_part_of_the_operating_system'\n      Identity = 'No One'\n    }\n    \n    UserRightsAssignment Adjustmemoryquotasforaprocess {\n      Policy = 'Adjust_memory_quotas_for_a_process'\n      Identity = 'Administrators, LOCAL SERVICE, NETWORK SERVICE'\n    }\n    \n    UserRightsAssignment Alloowlogonlocally {\n      Policy = 'Allow_log_on_locally'\n      Identity = 'Administrators, Users'\n    }\n    \n    UserRightsAssignment AllowlogonthroughRemoteDesktopServices {\n      Policy = 'Allow_log_on_through_Remote_Desktop_Services'\n      Identity = 'Administrators, Remote Desktop Users'\n    }\n    \n    UserRightsAssignment Changethesystemtime {\n      Policy = 'Change_the_system_time'\n      Identity = 'Administrators'\n    }\n    \n    UserRightsAssignment Changethetimezone {\n      Policy = 'Change_the_time_zone'\n      Identity = 'Administrators, LOCAL SERVICE, Users'\n    }\n    \n    \n    UserRightsAssignment Createglobalobjects {\n      Policy = 'Create_global_objects'\n      Identity = 'Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE'\n    }\n    \n    UserRightsAssignment Createpermanentsharedobjects {\n      Policy = 'Create_permanent_shared_objects'\n      Identity = 'No One'\n    }\n    \n    UserRightsAssignment Createsymboliclinks {\n      Policy = 'Create_symbolic_links'\n      Identity = 'Administrators'\n    }  \n    \n    UserRightsAssignment Debugprograms {\n      Policy = 'Debug_programs'\n      Identity = 'Adminstrators'\n    }\n    \n    UserRightsAssignment Denyaccesstothiscomputerfromthenetwork {\n      Policy = 'Deny_access_to_this_computer_from_the_network'\n      Identity = 'Guests, Local account'\n    }\n    \n    UserRightsAssignment Denylogonasabatchjob {\n      Policy = 'Deny_log_on_as_a_batch_job'\n      Identity = 'Guests'\n    }\n    \n    UserRightsAssignment Denylogonasaservice {\n      Policy = 'Deny_log_on_as_a_service'\n      Identity = 'Guests'\n    }\n    \n    UserRightsAssignment Denylogonlocally {\n      Policy = 'Deny_log_on_locally'\n      Identity = 'Guests'\n    } \n    \n    \n    UserRightsAssignment Enablecomputeranduseraccountstobetrustedfordelegation {\n      Policy = 'Enable_computer_and_user_accounts_to_be_trusted_for_delegation'\n      Identity = 'No One'\n    }\n    \n    UserRightsAssignment Generatesecurityaudits {\n      Policy = 'Generate_security_audits'\n      Identity = 'LOCAL SERVICE, NETWORK SERVICE'\n    }\n    \n    UserRightsAssignment Impersonateaclientafterauthentication {\n      Policy = 'Impersonate_a_client_after_authentication'\n      Identity = 'Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE'\n    }\n    \n    UserRightsAssignment Increaseschedulingpriority {\n      Policy = 'Increase_scheduling_priority'\n      Identity = 'Administrators, Window Manager\\Window Manager Group'\n    }\n    \n    UserRightsAssignment Loadandunloaddevicedrivers {\n      Policy = 'Load_and_unload_device_drivers'\n      Identity = 'Administrators'\n    }\n    \n    UserRightsAssignment Lockpagesinmemory {\n      Policy =  'Lock_pages_in_memory'\n      Identity = 'No one'\n    }\n    SecurityOption AccountSecurityOptions {\n      Name = 'AccountSecurityOptions'\n      \n      # Accounts\n      #Accounts_Administrator_account_status = 'Disabled'\n      \n      #Accounts_Block_Microsoft_accounts = \"Users cant add or log on with Microsoft Accounts\"\n      \n      Accounts_Guest_account_status = 'Disabled'\n      \n      Accounts_Limit_local_account_use_of_blank_passwords_to_console_logon_only = 'Enabled'\n      \n      # Audit\n      Audit_Force_audit_policy_subcategory_settings_Windows_Vista_or_later_to_override_audit_policy_category_settings = 'Enabled'\n      \n      Audit_Shut_down_system_immediately_if_unable_to_log_security_audits = 'Disabled'\n      \n      # Devices\n      Devices_Allowed_to_format_and_eject_removable_media = 'Administrators and Interactive Users'\n      \n      Devices_Prevent_users_from_installing_printer_drivers = 'Enabled'\n\n      Devices_Allow_undock_without_having_to_log_on = 'Disabled'\n\n      Devices_Restrict_CD_ROM_access_to_locally_logged_on_user_only = 'Enabled'\n\n      Devices_Restrict_floppy_access_to_locally_logged_on_user_only = 'Enabled'\n      \n      # Domain member\n      Domain_member_Digitally_encrypt_or_sign_secure_channel_data_always = 'Enabled'\n      \n      Domain_member_Digitally_encrypt_secure_channel_data_when_possible = 'Enabled'\n      \n      Domain_member_Digitally_sign_secure_channel_data_when_possible = 'Enabled'\n      \n      Domain_member_Disable_machine_account_password_changes = 'Disabled'\n      \n      Domain_member_Maximum_machine_account_password_age = '30'\n      \n      Domain_member_Require_strong_windows_2000_or_later_session_key = 'Enabled'\n\n      \n      # Interactive logon\n      Interactive_logon_Do_not_require_CTRL_ALT_DEL = 'Disabled'\n        \n      Interactive_logon_Display_user_information_when_the_session_is_locked = 'Do not display user information'\n\n      Interactive_logon_Do_not_display_last_user_name = 'Enabled'\n      \n      Interactive_logon_Machine_account_lockout_threshold = '10'\n      \n      Interactive_logon_Machine_inactivity_limit = '900'\n      \n      Interactive_logon_Message_text_for_users_attempting_to_log_on = 'Authorized users only.'\n      \n      Interactive_logon_Message_title_for_users_attempting_to_log_on = 'Authorized users only.'\n      \n      Interactive_logon_Number_of_previous_logons_to_cache_in_case_domain_controller_is_not_available = '4'\n      \n      Interactive_logon_Prompt_user_to_change_password_before_expiration = '5'\n      \n      Interactive_logon_Smart_card_removal_behavior = 'Lock Workstation'\n      \n      # Microsoft network client\n      Microsoft_network_client_Digitally_sign_communications_always = 'Enabled'\n      \n      Microsoft_network_client_Digitally_sign_communications_if_server_agrees = 'Enabled'\n      \n      Microsoft_network_client_Send_unencrypted_password_to_third_party_SMB_servers = 'Disabled'\n      \n      # Microsoft network server\n      Microsoft_network_server_Amount_of_idle_time_required_before_suspending_session = '15'\n      \n      Microsoft_network_server_Digitally_sign_communications_always = 'Enabled'\n      \n      Microsoft_network_server_Digitally_sign_communications_if_client_agrees = 'Enabled'\n      \n      Microsoft_network_server_Disconnect_clients_when_logon_hours_expire = 'Enabled'\n      \n      Microsoft_network_server_Server_SPN_target_name_validation_level = 'Accept if provided by client'\n      \n      # Network access\n      Network_access_Allow_anonymous_SID_Name_translation = 'Disabled'\n      \n      Network_access_Do_not_allow_anonymous_enumeration_of_SAM_accounts = 'Enabled'\n      \n      Network_access_Do_not_allow_anonymous_enumeration_of_SAM_accounts_and_shares = 'Enabled'\n      \n      Network_access_Do_not_allow_storage_of_passwords_and_credentials_for_network_authentication = 'Enabled'\n      \n      Network_access_Let_Everyone_permissions_apply_to_anonymous_users = 'Disabled'\n      \n      Network_access_Named_Pipes_that_can_be_accessed_anonymously = 'None'\n      \n      Network_access_Remotely_accessible_registry_paths = 'System\\CurrentControlSet\\Control\\ProductOptions|#|System\\CurrentControlSet\\Control\\Server Applications|#|Software\\Microsoft\\Windows NT\\CurrentVersion'\n      \n      Network_access_Remotely_accessible_registry_paths_and_subpaths = 'System\\CurrentControlSet\\Control\\Print\\Printers|#|System\\CurrentControlSet\\Services\\Eventlog|#|Software\\Microsoft\\OLAP Server|#|Software\\Microsoft\\Windows NT\\CurrentVersion\\Print|#|Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows|#|System\\CurrentControlSet\\Control\\ContentIndex|#|System\\CurrentControlSet\\Control\\Terminal Server|#|System\\CurrentControlSet\\Control\\Terminal Server\\UserConfig|#|System\\CurrentControlSet\\Control\\Terminal Server\\DefaultUserConfiguration|#|Software\\Microsoft\\Windows NT\\CurrentVersion\\Perflib|#|System\\CurrentControlSet\\Services\\SysmonLog'\n      \n      Network_access_Restrict_anonymous_access_to_Named_Pipes_and_Shares = 'Enabled'\n      \n      # Network_access_Restrict_clients_allowed_to_make_remote_calls_to_SAM = 'Administrators: Remote Access: Allow'\n      \n      Network_access_Shares_that_can_be_accessed_anonymously = 'None'\n      \n      Network_access_Sharing_and_security_model_for_local_accounts = 'Classic - local users authenticate as themselves'\n      \n      # Network security\n      Network_security_Allow_Local_System_to_use_computer_identity_for_NTLM = 'Enabled'\n      \n      Network_security_Allow_LocalSystem_NULL_session_fallback = 'Disabled'\n      \n      Network_security_Allow_PKU2U_authentication_requests_to_this_computer_to_use_online_identities = 'Disabled'\n      \n      Network_security_Configure_encryption_types_allowed_for_Kerberos = 'DES_CBC_CRC', 'DES_CBC_MD5', 'RC4_HMAC_MD5', 'AES128_HMAC_SHA1', 'AES256_HMAC_SHA1', 'FUTURE'\n      \n      Network_security_Do_not_store_LAN_Manager_hash_value_on_next_password_change = 'Enabled'\n      \n      Network_security_Force_logoff_when_logon_hours_expire = 'Enabled'\n      \n      Network_security_LAN_Manager_authentication_level = 'Send NTLMv2 responses only'\n      \n      Network_security_LDAP_client_signing_requirements = 'Negotiate signing'\n      \n      Network_security_Minimum_session_security_for_NTLM_SSP_based_including_secure_RPC_clients = 'Both options checked'\n\n      Network_security_Minimum_session_security_for_NTLM_SSP_based_including_secure_RPC_servers = 'Both options checked'\n\n      # System cryptography\n      System_cryptography_Force_strong_key_protection_for_user_keys_stored_on_the_computer = 'User is prompted when the key is first used'\n      \n      # System objects\n      System_objects_Require_case_insensitivity_for_non_Windows_subsystems = 'Enabled'\n      \n      System_objects_Strengthen_default_permissions_of_internal_system_objects_eg_Symbolic_Links = 'Enabled'\n      \n      # User Account Control\n      User_Account_Control_Admin_Approval_Mode_for_the_Built_in_Administrator_account = 'Enabled'\n      \n      User_Account_Control_Behavior_of_the_elevation_prompt_for_administrators_in_Admin_Approval_Mode = 'Prompt for consent on the secure desktop'\n      \n      User_Account_Control_Behavior_of_the_elevation_prompt_for_standard_users = 'Automatically deny elevation request'\n      \n      User_Account_Control_Detect_application_installations_and_prompt_for_elevation = 'Enabled'\n      \n      User_Account_Control_Only_elevate_UIAccess_applications_that_are_installed_in_secure_locations = 'Enabled'\n      \n      User_Account_Control_Run_all_administrators_in_Admin_Approval_Mode = 'Enabled'\n      \n      User_Account_Control_Switch_to_the_secure_desktop_when_prompting_for_elevation = 'Enabled'\n      \n      User_Account_Control_Virtualize_file_and_registry_write_failures_to_per_user_locations = 'Enabled'\n    }\n    \n  }\n  \n}\n\nWindows10Hardening\n","undoManager":{"mark":0,"position":2,"stack":[[{"start":{"row":397,"column":0},"end":{"row":408,"column":4},"action":"remove","lines":["    #Audit Policies","    AuditPolicySubcategory 'Audit Credential Validation (Success)' {","            Name      = 'Credential Validation'","            AuditFlag = 'Success'","            Ensure    = 'Present'","        }","    AuditPolicySubcategory 'Audit Credential Validation (Failure)' {","            Name      = 'Credential Validation'","            AuditFlag = 'Failure'","            Ensure    = 'Present'","        }","    "],"id":1},{"start":{"row":396,"column":4},"end":{"row":397,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":28,"column":48},"end":{"row":29,"column":0},"action":"remove","lines":["",""],"id":2}],[{"start":{"row":28,"column":48},"end":{"row":29,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":29,"column":0},"end":{"row":29,"column":2},"action":"insert","lines":["  "]}]]},"ace":{"folds":[],"scrolltop":4229.6,"scrollleft":12.6,"selection":{"start":{"row":391,"column":6},"end":{"row":391,"column":6},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1666765591790}